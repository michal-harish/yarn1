SIMPLE YARN EXECUTOR
====================

- This is a YARN helper for submitting master and requesting containers by simply giving a class
- At the moment this is based on hadoop/yarn 2.3.0-cdh5.0.3


FEATURES
--------
- Easy deployment of distributed application by extending YarnMaster class 
- Requesting containers from the instance of YarnMaster also simply by giving container class
- Archiving classes and distribution done under the hood (dependency classes are included after mvn package)
- Allows launching of fully distributed YARN application directly from IDE by using the launcher in the test package


QUICK START WITH INCLUDED EXAMPLE APPLICATION
---------------------------------------------
This is in package `org.apache.yarn1.example`

# Running as `yarn` program
1) mvn clean package
2) yarn jar target/yarn1-example.jar 

# Running from IDE
1) mvn clean package - if your IDE doesn't support maven dependency plugin)
2) modify HelloYarn1Master configuration to point to your hadoop and yarn configs
3) run Yarn1Launcher under the test sources as Java Application in your IDE

  
QUICK SETUP OF LOCAL YARN CLUSTER
---------------------------------
1) download 2.3.0-cdh5.0.3 bundle from cloudera, unapck and cd into the content
2) start yarn managers ./sbin/yarn-daemon.sh start resourcemanager && ./sbin/yarn-daemon.sh start
3) start hadoop cluster ./sbin/hadoop-daemon.sh start namenode && ./sbin/hadoop-daemon.sh start secondarynamenode && ./sbin/hadoop-daemon.sh start datanode
WITH SINGLE-NODE LOCAL YARN CLUSTER


TODO
----
- shutdown hook which will kill the yarn app
- onNodesUpdated behaviour
- reporting progress for continuous service could represent a "lag" instead of ratio of completed and submitted tasks
- distribute non-provided dependencies programatically, i.e. without having to run mvn compile first

